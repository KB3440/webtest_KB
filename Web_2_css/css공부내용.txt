내 학교 줌 아이디와 비번 : 696 107 2618, 9ewwv3
중요 모임 : 294 503 0852 
공부모임 : 817 9934 8792, 869778

html과 css, javascript의 차이

이 세 언어는 웹 사이트를 구성하는데 주요 언어로서 사용이 된다. 이 문서는 주로 css에 대하여서 다루는 내용이다.
html은 웹 사이트의 골격을 이룬다라고 보면 되고,
css은 웹 사이트가 보여지게 되는 시각화를 담당하며,
javascript는 웹 사이트에 활기를 불어일으켜준다. 웹 사이트의 구동의 심장이라고 보면 된다. 
자동차로서 비유를 하겠다. html은 차체의 프레임이고, css은 외부 디자인과 내부 디자인에 해당이 되며, javascript는 차를 움직여주는 매커니즘에 해당한다. 
우리는 여기에서 css를 집중적으로 배워나갈 것이다.


<CSS 기초기본내용 공부>
1. html에서의 디자인 태그로서의 한계와 새로운 해결책
2. css 기본 문법 (style 태그 안에 css언어, {}와 ;의 활용. html과 css는 다른언어기에 지정해주는 것이 필요.)
3. css 용어 설명 (html 에서는 태그의 특성을 담은 태그의 이름들과, 그리고 태그 안에 있는 속성에 대해서 설명을 했는데, css의 용어 설명에 해당한다.)
4. css 특성들 알아서 찾아나가기.
5. css 선택자들의 종류들. 특성 꾸미고자 하는 바를 지정하는 선택자의 차이와 tag, class, id 선택자의 차이에 대해서 알아본다. 그리고 선택자의 사용 용도에 대해서 알아본다. (전체 선택자. 예를 들면 파이썬 함수 import에서 불러일으키는 함수 안에 있는 모든 method를 불러올 때 *를 사용하듯, 모든 태그 지정 시는 *를 사용하고, 태그 직접 지정, class 활용, id 활용이 있다.)
6. css 박스 모델, 문서에서 서로의 공간을 만드는 법
7. css 박스 모델 활용
8. css 그리드 설명
9. css 그리드 활용
10. css 미디어쿼리 설명
11. css 미디어쿼리 활용
12. css코드의 재활용. 수많은 웹페이지 수정시 link 태그로 css나 javascript 태그를 불러오고 사용 가능하다.

<CSS 자세한 내용 설명>
1. html 태그로서 각기 내용을 설명할 수 있는데, 각기 설정을 하다 보니 해당 태그가 1만개가 있을 때 이를 모두 수정하라고 하면 너무 많은 시간이 걸림. 즉 태그로서 쉬운 방식, 우리가 아는 방식으로 하기에는 시간이 너무 오래 걸리기에 복잡한 방식이 있으나, 새로운 언어인 CSS의 언어가 발달이 되었다. 
2. css는 head 태그에 포함되는 style 태그로서 시작이 된다. style내에서 각기 태그에 해당하는 속성을 부여하는 언어가 css이다. style은 각기 태그에서도 attribute로 사용 가능하다. 허나 기본 태그들 안에 있는 style은 html의 attribute이고, head 안의 style 태그는 css 언어이다. 활용방식은 둘이 비슷 (style 안에는 css언어와 동일하게 표현. 태그 내에서는 여러개 효과 사용시 문단구분자 ";"를 반드시 적는다.)
특정 태그의 속성을 꾸미고자 할 때, "{ }" 로서 내용을 감싸준다. (그 앞에는 바꾸고자 하는 태그의 속성이 있음. 이를 selector, 선택자라고 함) 속성을 지정하고 특성을 꾸미는 효과의 연걸어는 "="이 아닌, ":"으로 지정해주며, 마무리는 c언어처럼 ";"로 마무리한다. (문단구분자로 ","사용 불가이므로, ";"를 사용한다.) (중괄호 안에 특성을 표현하고, 꾸미는 언어들을 Declaration, 선언이라고 한다.  
head 내에 있는 태그에서는 직접 선언을 하는 선택자를 미리 밝혀주고 내용을 적어야 하지만, 태그 내에서 style의 attribute를 사용할 때는 선택자를 밝힐 필요가 없다. 즉 중괄호나 앞에 선언태그를 쓰는 것이 아닌, 이전 attribute처럼 쓰되 형식은 css처럼 쓰면 된다. 
3. css의 용어 설명이다. style 태그 내에서 선언하는 css용어들은 특정 태그를 꾸며줄 것을 고르는 selector, 선택자가 있고, 선택자 내에서 특성을 지정해주는 것을 declaration, 선언이라고 한다. 또한 특성을 설명해주는 것 중에서 어떠한 것을 변경할 것인지를 말해주는 것을 property, 특성이라고 하며, 그 특성 값을 지정해주는 것을 value, 값이라고 한다. 이로서 css언어를 설명할 수 있다. 
4. css에서 h1에 대한 태그를 글씨를 조정해보려고 할 때, 글씨 크기를 조정해보려고 한다. 이를 찾아보는 것은 누구한테 의지를 해 보지 말고 스스로 해 보는 것은 어떠한가? 검색 사이트에서 css 글씨 크기 관련 특성 (property) 에 대해서 검색 해 본 결과, font-size이며, value는 여러가지로 나올 수 있었다. Tip! : font-size에서 value값이 나와있을 때, 글씨 크기를 조정하는 단위는 px(픽셀) 로 조정을 하게 된다. 
문서에서 글씨 위치 정렬하는 것처럼, css에도 그러한 기능이 있다. 얼라인이라고 불리는데, 한번 찾아보니 align이라고 불리는 것이다. value에서 text-align:center; 로 진행해보자. 
그렇게 한다면 선택자 selector가 h1이였기에, h1에 해당하는 것이 가운데로 정렬이 된다.
5. 예를 들어보자. href가 있는 a 태그에 대한 내용인데, 한번 방문한 적이 있는 하이퍼링크는 회색으로, 아직 그러한 적이 없는 하이퍼링크는 파란색으로 지정하고 싶습니다. 그렇다면 어떻게 해야할까요? 
우리가 a 태그 선택자에 모두 black으로 선언한 것을 기억할 것이다. 허나 개별적으로 선언하려면 각 태그 내의 attribute에 가서 지정해준다...이거 너무 복잡하다. 좋은 방법이 없을까?
이를 위해서 class가 등장한다. class는 태그 내에서 attribute로 사용한다. 여기서 클래스는 css값이 아니고 태그 내 지정이다. 그렇기에 꾸미고자 하는 몇개의 태그에 이름을 붙인다라고 생각하면 조금 쉽긴 하다. 
여기에서 "saw"라는 이름을 붙인 태그의 class들을 변경하고, 나머지 a 태그는 그대로 둘 수 있게 된다. 그러므로 클래스 이름을 style 태그 내에 선택자로 설정하고 바꿔보았을 때... 말을 안듣는다 왜일까? 
누구 것의 saw인지 알아야 한다. 파이선이나 c언어를 해 본 사람은 알텐데, method 라는 개념처럼 이름을 붙인 레고가 어떤 것인지 알 수 없기 때문이다. (레고도 용도에 따라 달라지는 것처럼, 태그의 다양성을 레고로 비유했다. 레고가 달라도 이름은 같게 붙일 수 있기 때문에...)
그렇기에 태그를 지정하는 일이 필요하다. method처럼 불러일으키는 것으로 "." 을 사용하였다. 그렇기에 전역 태그 내에 class 이름 "saw" 만 설정하도록 하려면 ".saw" 라고 확장자를 붙여야한다. 
이렇게 했을 때야 비로소 설정이 바뀌게 된다. 먼저 회색으로 바꿔보자. 
또 class도 이름을 여러개 사용 가능하다. "saw active" 라고 다른 태그에 이름을 붙였다. 여기서 이 태그의 class는 saw, active 두개가 된다. 즉 이름이 두개다. (html에서 class 이름은 띄어쓰기로 구별한다)
여기에서 하나는 saw라고, 하나는 active라고 선택자 각각을 선언하고, saw는 회색으로, active는 빨강으로 해 본다. 그리고 선언을 해 본다...
헌데 여기서 써 보니 둘 다 회색이 나오게 되었다. 왜 그럴까? style 태그에서 선택자의 순서가 중요하다. 만일 하나의 태그 안에 두개의 이름의 특성을 꾸몄다면, 나중에 기록된 것을 적용한다. 그렇기에 색이 구별이 안되는 것이다.
만약 .active로 해서 빨강으로 하고 싶다라면, css 선택자중 마지막에 넣어야 한다. 
헌데 이렇게 순서를 정하는 것도 복잡하다. 순서를 언제 생각하고 이걸 적겠는가. 그래서 이 둘보다 먼저 기준으로 하는 id 선택자가 있다. (선택자 순서, 즉 먼저 고려하여 적용하는 특성 순서는 id > class > tag 가 된다. id 먼저 구별한다는 것)
id 선택자를 하게 되었을 때 클래스보다 더 먼저 이것을 챙기게 된다. 즉 레고 중 이름 여러개 붙인 것중에서, 한 레고를 골라서 정직원처럼 계속 쓸 수 있기에 먼저 생각하는 존재라고 생각하면 편하겠다. 그래서 id 선택자를 고르게 되면 레고 중에서 우선적으로 선택하는 것을 의미한다고 생각하면 편하다. (css에서 id값 불러오기는 #이다)
이렇게 하면 순서 상관없이 먼저 #이 적힌 id 먼저 설정한다. (순서 상관없이 id, class, tag 순으로 설정을 한다.) 
단점은 수많은 레고 중에서 특정 하나만 값을 끼울 수 있기에, 수많은 레고 중 종류가 같은 태그 내에서 먼저 쓸 수 있는 것은 하나밖에 없어서, 한 번밖에 사용 못하는 하나의 고유값이다. 
즉 한번 설정한 곳에만 사용 가능한 단일값이다. 한명이 가지고 있는 고유학번, 고유값이기에 한번만 쓸 수 있는 것이다. (왜 영어에서 id가 identify로 구별하기를 사용했는지, 구별을 위해서 각자를 id값으로 책정했는지 생각해보면 된다.)
6. css에서 문서에서 공간을 차지하는 박스에 대해서 알아보고자 한다. 박스는 구성이 안에 있는 순서대로 내용을 담은 content와, 이를 구별해주는 border 경계 사이에 공간을 심어주는 padding (솜털, 보이지 않는 공간) 이 있고, 경계선 바깥을 지정해주는 margin (이익이 남는다, 즉 남는 겉공간을 의미) 을 설정할 수 있는 방법에 대해서 배워나간다. 
7. 자세한 것은 사진을 참조. 각기 태그마다 문서 내에서 차지하고 있는 박스 형태가 있는데, F12를 열어보면 그것이 나오게 되어있다. 각 태그마다 중요하게 나와있는 경계, 그 위에 margin과 그 안에 padding을 활용. 그리고 가장 중요한 것은 박스 내에서는 contents가 있다는 것. 이전에 만든 웹을 사용해서 적용해보자
8.
9.
10.