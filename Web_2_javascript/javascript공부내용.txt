html과 css, javascript의 차이

이 세 언어는 웹 사이트를 구성하는데 주요 언어로서 사용이 된다. 이 문서는 javascript의 기초에 대해서 알아가는 문서이다. 
html은 웹 사이트의 골격을 이룬다라고 보면 되고,
css은 웹 사이트가 보여지게 되는 시각화를 담당하며,
javascript는 웹 사이트에 활기를 불어일으켜준다. 웹 사이트의 구동의 심장이라고 보면 된다. 
자동차로서 비유를 하겠다. html은 차체의 프레임이고, css은 외부 디자인과 내부 디자인에 해당이 되며, javascript는 차를 움직여주는 매커니즘에 해당한다. 
이 메모는 자바스크립트에 대해서 집중적으로 공부해 나갈 예정이다. 

<javascript 공부 내용>
1. javascript의 활용 목적
2. javascript- 배경바꿔보기
3. html + javascript를 잇는 태그, "script"
4. html + javascript 연결, 이벤트 
5. 사이트의 콘솔 활용법
6. javascript-데이터타입. 문자열과 숫자, 논리형 (자료형 파악)
7. javascript-변수 + 대입연산자 (변수에 값 집어넣기)
8. css 복습
9. div태그와 span태그 활용
10. 선택자 복습
11. javascript-제어할 태그 선택과 특성 불러오기
12. 프로그램, 프로그래밍, 프로그래머의 차이란...??
13. 조건문 if
14. 리팩토링, 중복되는 코드 제거 (리펙토링, 공장에 보내서 쓸만하게 다시 만드는 것)
15. 배열 array
16. 반복문 while
17. 배열과 반복문 활용. array method 활용 및 연산
18. 함수 function 


<정리 내용>
1. Html은 웹 사이트를 만들었을 때, 정적입니다. 마치 변하지 않는 사진과 같다라고 볼 수 있습니다. 즉 한번 만들면 그 모습 그대로 계속 유지되고 있다라는 것입니다.
허나 javascript는 웹 사이트를 동적으로 만들고, 사이트가 움직이는 모습을 볼 수 있습니다. 사람들과 상호작용을 하기 위하여서 동적으로 작용을 하게 되는 javascript를 사용하게 되는 것입니다. 
먼저는 html의 골격을 만든 후에, javascript를 활용하여서 사이트가 동적으로 움직일 수 있는, 사이트에 활력을 불어넣을 수 있는 활기를 불어넣는 것이다. 
비유를 한번 더 해보면, html으로만 구성된 사이트는 멈춰 있는 세계, 움직이지 못하고 고정된 물체라고 할 것 같으면 javascript를 넣게 되면 활기가 발생하여서 사람처럼 움직이고 물리적으로 움직이는 것처럼 보이게 된다라는 것입니다. 
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12. 프로그램은 순서를 구별하는 것이다. 프로그래밍은 그 순서를 만드는 것이고, 프로그래머는 그를 지휘하는 것이다. (음악을 만드는 사람의 특징적으로는 그렇다라고 한다. 음악 지휘에 애초부터 program 순서라고 한다. )
13.
14. 리펙토링, 자바스크립트에서는 매우 필요한 것이다. 많은 코드가 있는데 길이가 너무 길면 수정하기도 힘들고, 가독성도 떨어지기 마련이다.
이를 위해서 변하게 해 주는 것이 존재한다. 변수활용을 한다.
15. 비유를 해 본다. 우리가 살림을 하고, 집에서 살아갈 때 점점 집에 있는 물건들이 많아질 수록 마음에 근심이 생긴다. 왜냐? 정리도 안된 곳에서 아무거나 막 늘여놓으면 내가 찾고자 하는 것을 찾을 수가 없다. 여기에서 내가 원하는 것을 찾으려면... 물건의 늪에서 살아가야 할 것이다. 과연 그렇게 살고 싶을까?
이를 극복하기 위해서는 정리와 분류를 해야한다. 음식은 냉장고에, 옷은 옷 상자에, 물건 상자들은 물건 상자들에... 이렇게 분류를 해야지 내가 찾고자 하는 것을 찾을 수 있는 것이다.
여기에서 가장 중요한 것은, 음식은 냉장고에, 옷은 옷장에, 물건은 수납장에 있다라는 생각이 들기 때문에, 
어떤 것을 찾고자 하면 이를 담아놓은 박스를 먼저 찾기 마련이다. 음식은 냉장고에 있으니 냉장고를 먼저 생각하고, 음식은 나중에 생각하기 마련이다. 냉장고 먼저 가야지 음식을 찾을 수 있지 않겠는가?
그렇기에 배열에서는, 분류를 해서 따로 넣어놓은 물건을 찾기 위해서 이를 담아놓은 수납장을 선언하고 찾아서 그 값들을 찾고자 하는 것이다. 이것이 "배열"의 기본이다.
정리하면, 배열 내에 있는 물건을 찾기 위해서는 그 배열의 이름을 선언하는 것이다. 
16.
17.
18. 막상 input 태그 내에 있던 속성을 자바 스크립트로 설명을 해 놓으니... 코드가 너무 길다. 하나면 상관 없겠는데 만약에 버튼이 계속 많다라고 생각한다면 사용한다라고 생각한다라면 이것을 다 만들 생각에 눈앞이 아득해질 것이다.
그래서 이전에, 리펙토링으로 쓸모 없던 코드들을 재정비한것처럼 우리도 이제 이렇게 많은 기능을 지정한 것을 "함수"라는 곳에 따로 만들고, 그리고 함수를 불러와서 동일한 기능을 수행하게 할 것이다.
함수라고 함은... 어떠한 기능을 할 수 있도록 하는 도구이다. 헌데 그 길이가 너무 길어서 기능 지정을 하는 것을 앞에서 미리 만들어놓고, 그를 불러오는 것이다. (후에 나중에, c++에서 class와 function, method를 생각해보게 되었을 때 이를 잘 알 수 있게 된다.)
그래서 이를 지정해주고 사용하는 방법에 대해서 알아보고자 한다. 